#!/bin/bash

# Script de desinstalaci√≥n para el ejecutable de procesamiento de Excel
# Autor: Script de desinstalaci√≥n autom√°tica
# Versi√≥n: 2.0.0 - Simplificado

set -e

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funci√≥n para imprimir mensajes con colores
print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# Funci√≥n para mostrar ayuda
show_help() {
    echo "Uso: $0 [OPCIONES]"
    echo ""
    echo "Opciones:"
    echo "  -h, --help          Mostrar esta ayuda"
    echo "  -d, --directory     Directorio de instalaci√≥n (default: /usr/local/bin)"
    echo "  -f, --force         Forzar desinstalaci√≥n sin confirmaci√≥n"
    echo ""
    echo "Ejemplos:"
    echo "  $0                    # Desinstalaci√≥n completa con confirmaci√≥n"
    echo "  $0 -f                 # Desinstalaci√≥n forzada sin confirmaci√≥n"
    echo "  $0 -d ~/bin          # Desinstalar desde directorio personal"
    echo ""
    echo "El script eliminar√°:"
    echo "  üóëÔ∏è  Ejecutable excel-processor"
    echo "  üóëÔ∏è  Archivo de configuraci√≥n .env"
}

# Variables por defecto
INSTALL_DIR="/usr/local/bin"
FORCE=false
EXECUTABLE_NAME="excel-processor"

# Procesar argumentos
while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            show_help
            exit 0
            ;;
        -d|--directory)
            INSTALL_DIR="$2"
            shift 2
            ;;
        -f|--force)
            FORCE=true
            shift
            ;;
        *)
            print_error "Opci√≥n desconocida: $1"
            show_help
            exit 1
            ;;
    esac
done

# Funci√≥n para confirmar desinstalaci√≥n
confirm_uninstall() {
    if [ "$FORCE" = false ]; then
        echo ""
        print_warning "¬øEst√°s seguro de que quieres desinstalar excel-processor?"
        echo "Esto eliminar√°:"
        echo "  - Ejecutable: $INSTALL_DIR/$EXECUTABLE_NAME"
        echo "  - Configuraci√≥n: $INSTALL_DIR/.env"
        echo ""
        read -p "¬øContinuar? (y/N): " -n 1 -r
        echo ""
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            print_info "Desinstalaci√≥n cancelada"
            exit 0
        fi
    fi
}

# Funci√≥n para verificar si el ejecutable est√° en uso
check_executable_usage() {
    if pgrep -f "$EXECUTABLE_NAME" > /dev/null; then
        print_warning "El ejecutable est√° actualmente en ejecuci√≥n"
        if [ "$FORCE" = false ]; then
            read -p "¬øDetener el proceso antes de desinstalar? (y/N): " -n 1 -r
            echo ""
            if [[ $REPLY =~ ^[Yy]$ ]]; then
                print_info "Deteniendo proceso..."
                sudo pkill -f "$EXECUTABLE_NAME"
                sleep 2
            fi
        else
            print_info "Deteniendo proceso autom√°ticamente..."
            sudo pkill -f "$EXECUTABLE_NAME"
            sleep 2
        fi
    fi
}

# Funci√≥n para desinstalar configuraci√≥n
uninstall_config() {
    if [ -f "$INSTALL_DIR/.env" ]; then
        print_info "Eliminando archivo de configuraci√≥n..."
        sudo rm -f "$INSTALL_DIR/.env"
        print_success "Archivo de configuraci√≥n eliminado"
    else
        print_info "No se encontr√≥ archivo de configuraci√≥n para eliminar"
    fi
}

# Funci√≥n para desinstalar ejecutable
uninstall_executable() {
    if [ -f "$INSTALL_DIR/$EXECUTABLE_NAME" ]; then
        print_info "Eliminando ejecutable..."
        sudo rm -f "$INSTALL_DIR/$EXECUTABLE_NAME"
        print_success "Ejecutable eliminado"
    else
        print_info "No se encontr√≥ ejecutable para eliminar en $INSTALL_DIR/$EXECUTABLE_NAME"
    fi
}

# Funci√≥n para verificar desinstalaci√≥n
verify_uninstall() {
    echo ""
    print_info "Verificando desinstalaci√≥n..."
    
    local errors=0
    
    # Verificar ejecutable
    if [ -f "$INSTALL_DIR/$EXECUTABLE_NAME" ]; then
        print_error "‚ùå El ejecutable a√∫n existe en $INSTALL_DIR/$EXECUTABLE_NAME"
        errors=$((errors + 1))
    else
        print_success "‚úÖ Ejecutable eliminado correctamente"
    fi
    
    # Verificar configuraci√≥n
    if [ -f "$INSTALL_DIR/.env" ]; then
        print_error "‚ùå El archivo de configuraci√≥n a√∫n existe en $INSTALL_DIR/.env"
        errors=$((errors + 1))
    else
        print_success "‚úÖ Archivo de configuraci√≥n eliminado correctamente"
    fi
    
    # Verificar procesos
    if pgrep -f "$EXECUTABLE_NAME" > /dev/null; then
        print_warning "‚ö†Ô∏è  A√∫n hay procesos ejecut√°ndose con el nombre $EXECUTABLE_NAME"
        print_info "Puedes detenerlos manualmente con: sudo pkill -f $EXECUTABLE_NAME"
    else
        print_success "‚úÖ No hay procesos ejecut√°ndose"
    fi
    
    if [ $errors -eq 0 ]; then
        print_success "üéâ Desinstalaci√≥n completada exitosamente!"
    else
        print_error "‚ùå Se encontraron $errors errores durante la desinstalaci√≥n"
        exit 1
    fi
}

# Funci√≥n principal de desinstalaci√≥n
main() {
    print_info "üóëÔ∏è  Iniciando desinstalaci√≥n de excel-processor..."
    
    # Verificar permisos de administrador
    if [ "$EUID" -ne 0 ] && ! sudo -n true 2>/dev/null; then
        print_error "Este script requiere permisos de administrador"
        print_info "Ejecuta: sudo $0"
        exit 1
    fi
    
    # Confirmar desinstalaci√≥n
    confirm_uninstall
    
    # Verificar uso del ejecutable
    check_executable_usage
    
    # Desinstalaci√≥n completa
    uninstall_config
    uninstall_executable
    
    # Verificar desinstalaci√≥n
    verify_uninstall
    
    print_info "üìã Informaci√≥n adicional:"
    echo "  - Los directorios de trabajo (excel-files, processed-files, etc.) no se eliminan"
    echo "  - Los logs en ./logs/ no se eliminan autom√°ticamente"
    echo "  - Para limpiar todo: rm -rf ./excel-files ./processed-files ./error-files ./logs"
}

# Ejecutar funci√≥n principal
main "$@"
